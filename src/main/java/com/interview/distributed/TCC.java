package com.interview.distributed;

/**
 * @Author qcl
 * @Description
 * @Date 9:34 AM 5/19/2023
 *
 *
 * @TCC 相关面试题
 *
 * @Q1:分布式事务有了解过吗?你是如何解决的呢?
 *
 *`分布式事务`是指在分布式系统中执行的涉及多个独立事务资源的事务操作。在分布式系统中，不同的服务或组件可能分布在不同的计算机节点上，而这些节点可能属于不同的管理域、运行在不同的操作系统上，甚至位于不同的物理位置。由于分布式系统的特性，需要在跨越`多个节点`的操作中保证数据的`一致性`和`可靠性`，这就引入了分布式事务的概念。
 *
 * 传统的单机事务通常使用`ACID（原子性、一致性、隔离性和持久性）`属性来确保事务的正确执行。然而，在分布式环境中，由于存在`网络延迟`、`节点故障`等因素，要实现`ACID`属性变得更加困难。因此，分布式事务提供了一种机制来确保在分布式环境下事务的正确性。
 *
 * 分布式事务的`关键问题`是如何协调多个节点之间的`事务操作`，以确保事务的`一致性`。常见的分布式事务模型包括`两阶段提交（Two-Phase Commit，2PC）、三阶段提交（Three-Phase Commit，3PC）、补偿事务（Compensating Transaction）`等。
 *
 * 在两阶段提交中，事务的协调者负责向参与者发送准备请求，并等待参与者的响应。第一阶段是`准备阶段`，协调者向所有参与者发送准备请求，并等待它们的响应。如果所有参与者都准备就绪，那么协调者进入第二阶段，即`提交阶段`，向所有参与者发送提交请求。参与者接收到提交请求后，执行事务，并向协调者发送响应。如果所有参与者都成功执行事务，那么协调者提交事务，否则协调者发送回滚请求，要求参与者进行回滚操作。
 *
 * 三阶段提交是对两阶段提交的改进，引入了`超时机制`和`预提交阶段`。在预提交阶段，协调者向所有参与者发送预提交请求，并等待它们的响应。如果所有参与者都预提交成功，那么协调者进入第二阶段，即正式提交阶段，向所有参与者发送正式提交请求。参与者接收到正式提交请求后，执行事务，并向协调者发送响应。在第三阶段，协调者向所有参与者发送最终提交请求，参与者确认事务的最终提交。
 *
 * `补偿事务`是一种基于补偿机制的分布式事务处理方法。在补偿事务中，每个参与者在执行事务之前，会记录执行事务所需的所有操作。如果在事务执行过程中发生错误，参与者可以使用记录的操作信息进行回滚操作，从而恢复到事务开始之前的状态。
 *
 * 分布式事务的设计与实现需要考虑到系统的`可用性、性能、数据一致性`等方面的权衡。合理选择分布式事务模型，并在系统设计中考虑故障恢复机制和容错机制，可以有效地处理分布式系统中的事务操作。
 *
 *
 *
 *
 *
 *
 *
 *
 *
 *
 *
 *
 * @Q2:为什么用TCC？（为什么不用Seata、2PC？）
 * @Q3:TCC原理
 *
 *
 *
 */
public class TCC {
}
